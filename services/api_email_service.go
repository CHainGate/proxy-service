/*
 * OpenAPI proxy service
 *
 * This is the OpenAPI definition of the proxy service.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package services

import (
	"chaingate/proxy-service/proxyApi"
	"chaingate/proxy-service/utils"
	"context"
	"errors"
	"net/http"

	"github.com/sendgrid/sendgrid-go"
	"github.com/sendgrid/sendgrid-go/helpers/mail"
)

// EmailApiService is a service that implements the logic for the EmailApiServicer
// This service should implement the business logic for every endpoint for the EmailApi API.
// Include any external packages or services that will be required by this service.
type EmailApiService struct {
}

// NewEmailApiService creates a default api service
func NewEmailApiService() proxyApi.EmailApiServicer {
	return &EmailApiService{}
}

// SendEmail - send email
func (s *EmailApiService) SendEmail(ctx context.Context, email proxyApi.Email) (proxyApi.ImplResponse, error) {
	from := mail.NewEmail("CHainGate", utils.Opts.EmailFrom)
	subject := email.Subject
	to := mail.NewEmail(email.Name, email.EmailTo)
	plainTextContent := email.Content
	htmlContent := email.Content
	message := mail.NewSingleEmail(from, subject, to, plainTextContent, htmlContent)
	client := sendgrid.NewSendClient(utils.Opts.SendGridApiKey)

	_, err := client.Send(message)
	if err != nil {
		return proxyApi.Response(http.StatusInternalServerError, nil), errors.New("E-Mail could not be sent")
	}

	return proxyApi.Response(http.StatusNoContent, nil), nil
}
