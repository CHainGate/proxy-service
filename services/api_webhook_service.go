/*
 * OpenAPI proxy service
 *
 * This is the OpenAPI definition of the proxy service.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package services

import (
	"bytes"
	"chaingate/proxy-service/proxyApi"
	"context"
	"encoding/json"
	"errors"
	"log"
	"net/http"
)

// WebhookApiService is a service that implements the logic for the WebhookApiServicer
// This service should implement the business logic for every endpoint for the WebhookApi API.
// Include any external packages or services that will be required by this service.
type WebhookApiService struct {
}

// NewWebhookApiService creates a default api service
func NewWebhookApiService() proxyApi.WebhookApiServicer {
	return &WebhookApiService{}
}

// SendWebhook - send webhook
func (s *WebhookApiService) SendWebhook(_ context.Context, webHook proxyApi.WebHookRequestDto) (proxyApi.ImplResponse, error) {
	jsonData, err := json.Marshal(webHook.Body)
	if err != nil {
		log.Printf("SendWebhook error: %s", err.Error())
		return proxyApi.Response(http.StatusInternalServerError, nil), errors.New("Cannot convert body to json ")
	}

	resp, err := http.Post(webHook.Url, "application/json", bytes.NewBuffer(jsonData))
	if err != nil {
		log.Printf("SendWebhook error: %s", err.Error())
		return proxyApi.Response(http.StatusInternalServerError, nil), err
	}

	return proxyApi.Response(resp.StatusCode, nil), nil
}
